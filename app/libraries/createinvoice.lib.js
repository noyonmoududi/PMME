const fs = require("fs");
const PDFDocument = require("pdfkit");

function createInvoice(invoice, path) {
  let doc = new PDFDocument({ size: "A4", margin: 50 });

  generateHeader(doc);
  generateCustomerInformation(doc, invoice);
  generateInvoiceTable(doc, invoice);
  generateFooter(doc);

  doc.end();
  doc.pipe(fs.createWriteStream(path));
}

function generateHeader(doc) {
  doc
    .image("./public/file_storage/logo.png", 50, 45, { width: 50 })
    .fillColor("#444444")
    .fontSize(20)
    .text("Matrchaya Electronic.", 110, 57)
    .fontSize(10)
    .text("Matrchaya Electronic.", 200, 50, { align: "right" })
    .text("Master Super Market,Pollimonal hut", 200, 65, { align: "right" })
    .text("Bogura,sadar,bogura-5800", 200, 80, { align: "right" })
    .moveDown();
}

function generateCustomerInformation(doc, invoice) {
  doc
    .fillColor("#444444")
    .fontSize(15)
    .text("Customer Info", 50, 120);

  generateHr(doc, 140);

  const customerInformationTop = 150;

  doc
    .fontSize(10)
    .text("Invoice Number:", 50, customerInformationTop)
    .font("Helvetica-Bold")
    .text(invoice.saleInfo.invoice_no, 150, customerInformationTop)
    .font("Helvetica")
    .text("Invoice Date:", 50, customerInformationTop + 12)
    .text(formatDate(new Date()), 150, customerInformationTop + 12)
    .text("Invoice Type:", 50, customerInformationTop + 25)
    .font("Helvetica")
    .text("Installment", 150, customerInformationTop + 25)
    .font("Helvetica-Bold")
    .text("Balance Due:", 50, customerInformationTop + 38)
    .text(
      invoice.saleInfo.net_amount - invoice.saleInfo.total_payment_amount,
      //formatCurrency(invoice.subtotal - invoice.paid),
      150,
      customerInformationTop + 38
    )

    .font("Helvetica-Bold")
    .text(invoice.shipping.name+'('+ invoice.shipping.phone +')', 300, customerInformationTop)
    .font("Helvetica")
    .text(invoice.shipping.address, 300, customerInformationTop + 15)
    // .text(
    //   invoice.shipping.city +
    //     ", " +
    //     invoice.shipping.state +
    //     ", " +
    //     invoice.shipping.country,
    //   300,
    //   customerInformationTop + 30
    // )
    .moveDown();

  generateHr(doc, 200);
}

function generateInvoiceTable(doc, invoice) {
  doc
  .fillColor("#444444")
  .fontSize(15)
  .text("Invoice Items", 50, 220);
   generateHr(doc, 240);
  let i;
  const invoiceTableTop = 250;

  doc.font("Helvetica-Bold");
  generateTableRow(
    doc,
    invoiceTableTop,
    "Code",
    "Item Name",
    "Unit Cost",
    "Quantity",
    "Line Total"
  );
  generateHr(doc, invoiceTableTop + 20);
  doc.font("Helvetica");

  for (i = 0; i < invoice.items.length; i++) {
    const item = invoice.items[i];
    const position = invoiceTableTop + (i + 1) * 30;
    generateTableRow(
      doc,
      position,
      item.identity_code,
      item.productName,
      item.sale_price,
      item.quantity,
      item.sale_amount
    );

    generateHr(doc, position + 20);
  }

  const subtotalPosition = invoiceTableTop + (i + 1) * 30;
  generateTableRow(
    doc,
    subtotalPosition,
    "",
    "",
    "Subtotal",
    "",
    invoice.saleInfo.net_amount
  );

  const paidToDatePosition = subtotalPosition + 20;
  generateTableRow(
    doc,
    paidToDatePosition,
    "",
    "",
    "Paid To Date",
    "",
    invoice.saleInfo.total_payment_amount
  );

  const duePosition = paidToDatePosition + 25;
  doc.font("Helvetica-Bold");
  generateTableRow(
    doc,
    duePosition,
    "",
    "",
    "Balance Due",
    "",
    invoice.saleInfo.net_amount - invoice.saleInfo.total_payment_amount
  );
  doc.font("Helvetica");
}

function generateFooter(doc) {
  doc
    .fontSize(8)
    .text(
      "It is invoice generated by software, no signature required. If there is any problem with the product, please contact us immediately with the invoice.. Thank you",
      50,
      770,
      { align: "center", width: 500 }
    );
}

function generateTableRow(
  doc,
  y,
  code,
  item,
  unitCost,
  quantity,
  lineTotal
) {
  doc
    .fontSize(10)
    .text(code, 50, y)
    .text(item, 180, y)
    .text(unitCost, 280, y, { width: 90, align: "right" })
    .text(quantity, 370, y, { width: 90, align: "right" })
    .text(lineTotal, 0, y, { align: "right" });
}

function generateHr(doc, y) {
  doc
    .strokeColor("#aaaaaa")
    .lineWidth(1)
    .moveTo(50, y)
    .lineTo(550, y)
    .stroke();
}

function formatCurrency(cents) {
  return "$" + (cents / 100).toFixed(2);
}

function formatDate(date) {
  const day = date.getDate();
  const month = date.getMonth() + 1;
  const year = date.getFullYear();

  return year + "/" + month + "/" + day;
}

module.exports = {
  createInvoice
};
